<form id="search-form" action="<%= action %>" method="post"> 
  <% if (action == "/player-comparison") { %>
    <% for (const player of ["player1", "player2"]) { %>
      <div class="input-wrapper">
        <input class="player-search" name="<%= player %>" type="text" placeholder="Type player's name…" autocomplete="off" required />
        <div class="suggestions-box"></div>
      </div>
    <% } %>
  <% } else { %>
    <div class="input-wrapper">
      <input class="player-search" name="playerName" type="text" placeholder="Type player's name…" autocomplete="off" required />
      <div class="suggestions-box"></div>
    </div>
  <% } %>
  <button id="search-button" type="submit">GO</button>
</form>

<script>
  console.log("Autocomplete script loaded");

  window.addEventListener("DOMContentLoaded", () => {
    const BASE_URL = "http://127.0.0.1:8000";
    const inputs = document.getElementsByClassName("player-search");
    const debounceTimers = {};

    Array.from(inputs).forEach((input, index) => {
      // wrap input and suggestions-box are inside .input-wrapper
      const wrapper = input.closest(".input-wrapper");
      if (!wrapper) return;  // skip if not wrapped
      const suggestionsBox = wrapper.querySelector(".suggestions-box");

      input.addEventListener("input", () => {
        clearTimeout(debounceTimers[index]);
        const query = input.value.trim();

        if (!query) {
          suggestionsBox.innerHTML = "";
          return;
        }

        debounceTimers[index] = setTimeout(async () => {
          try {
            const resp = await fetch(`${BASE_URL}/autocomplete?prefix=${encodeURIComponent(query)}`);
            if (!resp.ok) throw new Error(`HTTP error ${resp.status}`);
            const list = await resp.json();
            renderSuggestions(list, input, suggestionsBox);
          } catch (err) {
            console.error("Autocomplete error:", err);
          }
        }, 250);
      });

      // Hide suggestions when clicking outside
      document.addEventListener("click", (e) => {
        if (!wrapper.contains(e.target)) {
          suggestionsBox.innerHTML = "";
        }
      });
    });

    function renderSuggestions(players, input, suggestionsBox) {
      suggestionsBox.innerHTML = "";
      players.forEach(p => {
        const div = document.createElement("div");
        div.textContent = p.full_name;
        div.addEventListener("click", () => {
          input.value = p.full_name;
          suggestionsBox.innerHTML = "";
        });
        suggestionsBox.appendChild(div);
      });
    }
  });
</script>
